name: Test & Quality Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    name: Lint & Format Check

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Check code formatting
        run: npx prettier --check "src/**/*.ts"

      - name: Type check
        run: npm run typecheck

  unit-tests:
    runs-on: ubuntu-latest
    name: Unit Tests

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Run unit tests
        run: npm run test:unit
        env:
          NODE_ENV: test

      - name: Upload coverage reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: unit-test-coverage
          path: coverage/
          retention-days: 7

  integration-tests:
    runs-on: ubuntu-latest
    name: Integration Tests
    needs: [lint-and-format, unit-tests]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Run integration tests
        run: npm run test:integration
        env:
          NODE_ENV: test
          DISCORD_WEBHOOK_URL: ${{ secrets.TEST_DISCORD_WEBHOOK_URL }}

  e2e-tests:
    runs-on: ubuntu-latest
    name: E2E Tests
    needs: [unit-tests, integration-tests]
    # E2E テストは main ブランチのみ、または手動実行時のみ
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Run E2E tests
        run: npm run test:e2e
        env:
          NODE_ENV: test
          DISCORD_WEBHOOK_URL: ${{ secrets.TEST_DISCORD_WEBHOOK_URL }}
          QIITA_ACCESS_TOKEN: ${{ secrets.QIITA_ACCESS_TOKEN }}
          DEVTO_API_KEY: ${{ secrets.DEVTO_API_KEY }}

  build-test:
    runs-on: ubuntu-latest
    name: Build Test
    strategy:
      matrix:
        node-version: [18, 20]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Test built application
        run: |
          # ビルド成果物の存在確認
          if [ ! -f "dist/main.js" ]; then
            echo "Error: dist/main.js not found"
            exit 1
          fi
          
          # 基本的な実行テスト（設定ファイルなしでのエラーハンドリング確認）
          timeout 10s node dist/main.js --test || true
          echo "Build test completed for Node.js ${{ matrix.node-version }}"

  security-audit:
    runs-on: ubuntu-latest
    name: Security Audit

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=moderate

      - name: Check for known vulnerabilities
        run: npx audit-ci --moderate

  dependency-review:
    runs-on: ubuntu-latest
    name: Dependency Review
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Dependency Review
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: moderate

  test-summary:
    runs-on: ubuntu-latest
    name: Test Summary
    needs: [lint-and-format, unit-tests, integration-tests, build-test, security-audit]
    if: always()

    steps:
      - name: Check test results
        run: |
          echo "=== Test Results Summary ==="
          echo "Lint & Format: ${{ needs.lint-and-format.result }}"
          echo "Unit Tests: ${{ needs.unit-tests.result }}"
          echo "Integration Tests: ${{ needs.integration-tests.result }}"
          echo "Build Test: ${{ needs.build-test.result }}"
          echo "Security Audit: ${{ needs.security-audit.result }}"
          
          # すべてのジョブが成功した場合のみ成功とする
          if [[ "${{ needs.lint-and-format.result }}" == "success" && \
                "${{ needs.unit-tests.result }}" == "success" && \
                "${{ needs.integration-tests.result }}" == "success" && \
                "${{ needs.build-test.result }}" == "success" && \
                "${{ needs.security-audit.result }}" == "success" ]]; then
            echo "✅ All tests passed!"
            exit 0
          else
            echo "❌ Some tests failed"
            exit 1
          fi